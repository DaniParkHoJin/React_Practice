immer를 사용하여 더 쉽게 불변성 유지하기
1. immer를 설치하고 사용법 알아보기
1) 설치
	- yarn add immer 

2) immer를 사용하지 않고 불변성 유지
3) immer 사용법
	import { produce } from 'immer';
	const nextState = produce(originalState, draft => {
		// 바꾸고 싶은 값 바꾸기
		draft.somewhere.deep.inside = 5;
	})
	
	- 두 번째 파라미터로 전달되는 함수 내부에서 원하는 값을 변경하면, produce 함수가 불변성 유지를 대신해 주면서 새로운 상태를 생성해 줍니다.
	- 이 라이브러리의 핵심은 '불변성에 신경 쓰지 않는 것처럼 코드를 작성하되 불변성 관리는 제대로 해주는 것'입니다. 
	- 단순히 같은 곳에 위치하는 값을 바꾸는 것 외에 배열을 처리할 때도 매우 쉽고 편합니다.

4) useState의 함수형 업데이트와 immer 함께 쓰기
- immer에서 제공하는 produce 함수를 호출할 때, 첫 번째 파라미터가 함수 형태라면 업데이트 함수를 반환
